{"version":3,"sources":["webpack:///./src/corpus.ts","webpack:///./src/css/style.css?e1b4","webpack:///./src/css/style.css","webpack:///./src/visuals.tsx","webpack:///./src/utils.ts","webpack:///./src/index.tsx","webpack:///./src/settings.ts","webpack:///./src/settingsPanel.tsx","webpack:///./src/corpusPanel.tsx","webpack:///./src/mainPanel.tsx"],"names":[],"mappings":"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","file":"main-ee165a470debf7893b7f.js","sourcesContent":["import {AutoIdAble} from './utils'\nimport * as sbt from '@knod/sbd';\nimport * as utils from './utils';\n\nexport class CorpusData {\n    public readonly sentences: string[];\n    public readonly commaSentences: number[];\n\n\n    private constructor(public readonly text: string) {\n        this.sentences = sbt.sentences(text, {parse_type: \"strings\", newline_boundaries: true})\n                            .map(s => s.replace(/ +/g, \" \"));\n        this.commaSentences = this.sentences\n                                    .map((s, i) => s.indexOf(\",\") >= 0? i : undefined)\n                                    .filter(a => a != undefined) as number[];\n    }\n\n    public pickRandomCommaSentence(contextSize: number): [string, string[]] {\n        const cs = this.commaSentences;\n        let start = cs.findIndex(i => i >= contextSize);\n        if (start < 0) {\n            start = 0;\n        }\n        const index = cs[utils.random(start, cs.length)];\n        const contextStart = index - contextSize;\n        return [this.sentences[index], this.sentences.slice(contextStart, contextStart + contextSize)]\n    }\n\n    public static create(text: string): CorpusData {\n        return new CorpusData(text);\n    }\n}\n\nexport class Corpus extends AutoIdAble {\n    public constructor(\n            public readonly name: string,\n            private readonly source: CorpusData | (() => Corpus)\n        ) {\n        super();\n    }\n\n    private _data: CorpusData | undefined = undefined;\n\n    public get data(): CorpusData {\n        if (this._data) {\n            return this._data;\n        }\n\n        if (typeof this.source === \"function\") {\n            console.log(`load lazy corpus ${this.name}`)\n            let corpus = this.source();\n            if (corpus.name != this.name) {\n                console.warn(`Loaded corpus '${corpus.name}' into '${this.name}'`)\n            }\n            this._data = corpus.data;\n        } else {\n            this._data = this.source;\n        }\n        return this._data;\n    }\n\n    public pickRandomCommaSentence(contextSize: number): [string, string[]] {\n        return this.data.pickRandomCommaSentence(contextSize);\n    }\n\n    public static create(name: string, text: string): Corpus {\n        return new Corpus(name, CorpusData.create(text));\n    }\n\n    public static createLazy(name: string, loader: () => Corpus) {\n        return new Corpus(name, loader)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/corpus.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/style.css\n// module id = 190\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n    background-color: whitesmoke;\\n    padding-bottom: 200px;\\n}\\n\\n.input-block {\\n    font: 15px/normal 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'source-code-pro', monospace;\\n    margin-bottom: 30px;\\n}\\n\\n.input-block:last-child {\\n    margin-bottom: 0px;\\n}\\n\\n.editor-container {\\n    background-color: lightgray;\\n    margin: 5px 0;\\n}\\n\\n.context-container, .editor-container {\\n    font-size: 140%;\\n    padding: 2px 4px\\n}\\n\\n\\n.switch {\\n    vertical-align: middle;\\n}\\n\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 30px;\\n  height: 17px;\\n  margin: 0 4px;\\n  vertical-align: middle;\\n}\\n\\n/* Hide default HTML checkbox */\\n.switch input {display:none;}\\n\\n/* The slider */\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  -webkit-transition: .1s;\\n  transition: .1s;\\n}\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 13px;\\n  width: 13px;\\n  left: 2px;\\n  bottom: 2px;\\n  background-color: white;\\n  -webkit-transition: .1s;\\n  transition: .1s;\\n}\\n\\n\\n\\ninput:checked + .slider {\\n  background-color: #2196F3;\\n}\\n\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(13px);\\n  -ms-transform: translateX(13px);\\n  transform: translateX(13px);\\n}\\n\\n\\n\\n\\n\\n.toggle {\\n    vertical-align: middle;\\n}\\n\\n.toggle {\\n  position: relative;\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\\n/* Hide default HTML checkbox */\\n.toggle input {display:none;}\\n\\n/* The slider */\\n.toggle-view {\\n  cursor: pointer;\\n  background-color: #ccc;\\n  -webkit-transition: .4s;\\n  transition: .4s;\\n  padding: 2px 5px;\\n}\\n\\n.toggle-view:before {\\n  background-color: white;\\n  -webkit-transition: .4s;\\n  transition: .4s;\\n}\\n\\ninput:checked + .toggle-view {\\n  background-color: #2196F3;\\n}\\n\\ninput:focus + .toggle-view {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\n\\n.monaco-editor .margin {\\n    background-color: #f0f0f0 !important\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/css/style.css\n// module id = 191\n// module chunks = 1","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as Utils from \"./utils\";\n\n\n/** small wrapper for bootstrap form groups */\nexport class FormGroup extends React.Component<{\n\t\tlabel: string, children?: any, id?:string, isStatic?:boolean\n\t}, {}> {\n\n\trender() {\n\t\treturn (\n            <div className=\"form-group\">\n                <label htmlFor={this.props.id} className=\"col-sm-6 control-label\">{this.props.label}</label>\n                <div className={\"col-sm-6 \"+(this.props.isStatic?\"form-control-static\":\"\")}>{this.props.children}</div>\n            </div>\n        );\n\t}\n}\n\n\n/** small wrapper for bootstrap form checkboxes */\nexport class CheckboxForm extends React.Component<{checked: boolean, label: string, id?: string, onChange: (checked: boolean) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.checked);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<FormGroup label={this.props.label} id={this.props.id} isStatic>\n\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} id={this.id} ref={e => this.input = e!} onChange={this.onChange.bind(this)} />\n\t\t\t</FormGroup>\n\t\t);\n\t}\n}\n\n/** small wrapper for bootstrap form number field */\nexport class NumberForm extends React.Component<{value: number, step?: number, min?: number, max?: number, label: string, id?: string, onChange: (value: number) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(+this.input.value);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<FormGroup label={this.props.label} id={this.props.id} isStatic>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\tref={e => this.input = e!}\n\t\t\t\t\tonChange={this.onChange.bind(this)} />\n\t\t\t</FormGroup>\n\t\t);\n\t}\n}\n\nexport interface SelectFormItem {\n\tvalue: string;\n\tdata: string;\n}\n\nexport class SelectForm extends React.Component<{value: string, items: SelectFormItem[], label: string, id?: string, onChange: (value: string) => void}, {}> {\n\n\tprivate input: HTMLSelectElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.value);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<FormGroup label={this.props.label} id={this.props.id} isStatic>\n\t\t\t\t<select\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tref={e => this.input = e!}\n\t\t\t\t\tonChange={this.onChange.bind(this)}>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.items.map(item => (<option key={item.value} value={item.value}>{item.data}</option>))\n\t\t\t\t\t}\n\t\t\t\t</select>\n\t\t\t</FormGroup>\n\t\t);\n\t}\n}\n\n\nexport class Switch extends React.Component<{className?: string, checked: boolean, label: string, id?: string, onChange: (checked: boolean) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.checked);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<span className={\"switch-grouper \" + (this.props.className || \"\")}>\n                <label htmlFor={this.id}>{this.props.label}</label>\n\t\t\t\t<label className=\"switch\">\n\t\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} id={this.id} ref={e => this.input = e!} onChange={this.onChange.bind(this)} />\n\t\t\t\t\t<div className=\"slider\"></div>\n\t\t\t\t</label>\n\t\t\t</span>\n\t\t);\n\t}\n}\n\n\nexport class ToggleButton extends React.Component<{className?: string, checked: boolean, label: string, id?: string, onChange: (checked: boolean) => void}, {}> {\n\n\tprivate input: HTMLInputElement;\n\tprivate id = this.props.id || Utils.randomString();\n\n\tprivate onChange(): void {\n\t\tthis.props.onChange(this.input.checked);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<label className={\"toggle \" + (this.props.className || \"\")}>\n\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} id={this.id} ref={e => this.input = e!} onChange={this.onChange.bind(this)} />\n\t\t\t\t<div className=\"toggle-view\">{this.props.label}</div>\n\t\t\t</label>\n\t\t);\n\t}\n}\n\nexport class Message extends React.Component<{className?: string, show?: boolean, color?: string}> {\n\trender() {\n\t\tconst props = this.props;\n\t\tconst color = props.color || \"red\"\n\t\tconst show = props.show === undefined? true : props.show\n\n\t\treturn (\n\t\t\t<span className={props.className} style={{color, display: show? \"\": \"none\"}}>{props.children}</span>\n\t\t)\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/visuals.tsx","\n\nconst defaultRandomStrings = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\nexport function randomString(length: number = 8, chars: string = defaultRandomStrings): string {\n    var result = \"\";\n    for (var i = length; i > 0; --i) {\n        result += chars[Math.floor(Math.random() * chars.length)];\n    }\n\n    return result;\n}\n\nexport function random(min: number, max: number): number {\n    const interval = max - min + 1;\n    return Math.floor(Math.random() * interval + min);\n}\n\nexport function normFloat(num: number): number {\n    return parseFloat((Math.round(num * 100) / 100).toFixed(2));\n}\n\nexport interface IdAble {\n    id: number\n}\n\nexport class AutoIdAble implements IdAble {\n    id: number = AutoIdAble.nextId++;\n    private static nextId = 1;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as $ from \"jquery\";\nimport {Settings} from './settings';\nimport {SettingsPanel} from './settingsPanel';\nimport {CorpusPanel} from './corpusPanel';\nimport {MainPanel} from './mainPanel';\nimport { Corpus } from \"./corpus\";\n\nimport \"jquery\";\nimport \"bootstrap/dist/js/bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/style.css\";\n\n\nclass GUI extends React.Component<{}, {}> {\n\tprivate settings = new Settings()\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\n\t\tconst addLazy = (name: string, loader: () => Corpus) => {\n\t\t\tthis.settings.addCorpus(Corpus.createLazy(name, loader));\n\t\t}\n\t\t// add default texts\n\t\taddLazy(\"The Adventures of Sherlock Holmes\", () => require(\"./corpora/sherlockHolmes\"));\n\t\taddLazy(\"Pride and Prejudice\", () => require(\"./corpora/prideAndPrejudice\"));\n\t\taddLazy(\"Alice's Adventures in Wonderland\", () => require(\"./corpora/alicesAdventuresInWonderland\"));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<a href=\"https://github.com/srtobi/comma-trainer\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tstyle={{ position: \"absolute\", top: 0, right: 0, border: 0 }}\n\t\t\t\t\t\tsrc=\"https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67\"\n\t\t\t\t\t\talt=\"Fork me on GitHub\"\n\t\t\t\t\t\tdata-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\" />\n\t\t\t\t</a>\n\t\t\t\t<div className=\"container\">\n\n\t\t\t\t\t<div className=\"page-header\">\n\t\t\t\t\t\t<h1>Comma Trainer <small>by <a href=\"https://github.com/SrTobi/\">SrTobi</a></small></h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"panel panel-default config-panel\">\n\t\t\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t\t\t<h3 className=\"panel-title\">\n\t\t\t\t\t\t\t\t<a data-toggle=\"collapse\" data-target=\"#settings-panel\">Settings</a>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"panel-body collapse out\" id=\"settings-panel\">\n\t\t\t\t\t\t\t<SettingsPanel settings={this.settings} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t<div className=\"panel panel-default config-panel\">\n\t\t\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t\t\t<h3 className=\"panel-title\">\n\t\t\t\t\t\t\t\t<a data-toggle=\"collapse\" data-target=\"#main-panel\">Testing area</a>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"panel-body collapseo in\" id=\"main-panel\">\n\t\t\t\t\t\t\t<MainPanel settings={this.settings} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t<div className=\"panel panel-default config-panel\">\n\t\t\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t\t\t<h3 className=\"panel-title\">\n\t\t\t\t\t\t\t\t<a data-toggle=\"collapse\" data-target=\"#corpus-panel\">Corpus</a>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"panel-body collapse out\" id=\"corpus-panel\">\n\t\t\t\t\t\t\t<CorpusPanel settings={this.settings} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nvar target = document.createElement(\"div\");\nReactDOM.render(<GUI />, target);\ndocument.body.appendChild(target);\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import {Corpus} from './corpus'\nimport {observable, computed, action, useStrict} from 'mobx';\n\n\nexport class Settings {\n    @observable\n    public numContextSentences = 2\n\n    @observable\n    public corpora: Corpus[] = []\n\n    @observable\n    public currentCorpus: Corpus | undefined = undefined\n\n    @observable\n    public showCommasLeft: boolean = true;\n\n    public addCorpus(corpus: Corpus) {\n        this.corpora.push(corpus);\n        if (!this.currentCorpus) {\n            this.currentCorpus = corpus\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/settings.ts","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {observer} from 'mobx-react';\nimport {Settings} from './settings'\nimport * as Vis from './visuals'\n\n@observer\nexport class SettingsPanel extends React.Component<{settings: Settings}> {\n\n    private onChangeCorpusSelection(name: string) {\n        const settings = this.props.settings;\n        settings.currentCorpus = settings.corpora.find(c => c.name == name);\n    }\n\n    public render() {\n        const settings = this.props.settings;\n        const currentCorpus = settings.currentCorpus;\n        const corpusName = currentCorpus? currentCorpus.name : \"\";\n        return (\n            <div>\n                <Vis.SelectForm\n                    label=\"Corpus\"\n                    value={corpusName}\n                    items={settings.corpora.map((c) => {return {value: c.name, data: c.name}})}\n                    onChange={this.onChangeCorpusSelection.bind(this)}\n                    />\n                    \n                <Vis.NumberForm\n                    value={settings.numContextSentences}\n                    label=\"Context sentences\"\n                    min={1}\n                    max={10}\n                    onChange={(newVal) => { settings.numContextSentences = newVal }}\n                    />\n                \n                <Vis.CheckboxForm\n                    checked={settings.showCommasLeft}\n                    label=\"Show commas left\"\n                    onChange={(newVal) => { settings.showCommasLeft = newVal}}\n                    />\n            </div>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/settingsPanel.tsx","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {observer} from 'mobx-react';\nimport {observable} from 'mobx';\nimport {Settings} from './settings';\nimport {Corpus, CorpusData} from './corpus';\nimport * as Vis from './visuals';\n\n\nconst MinCommaSentences = 10;\n\n@observer\nexport class CorpusPanel extends React.Component<{settings: Settings}> {\n\n    @observable\n    private corpus: CorpusData = CorpusData.create(\"\");\n\n    @observable\n    private name = \"\"\n\n    @observable\n    private corpusText = \"\"\n\n\n    private submitCorpus(corpusData: CorpusData) {\n        this.props.settings.addCorpus(new Corpus(this.name, corpusData));\n\n        // reset form\n        this.name = \"\";\n        this.corpusText = \"\";\n    }\n\n    private onCorpusTextChange(text: string) {\n        this.corpusText = text;\n        this.corpus = CorpusData.create(text)\n    }\n    \n    public render() {\n        const corpus = this.corpus;\n        const settings = this.props.settings;\n        const nameExistsAlready = settings.corpora.some((c) => c.name.toUpperCase() == this.name.toUpperCase());\n        const nameOk = this.name.length > 0 && !nameExistsAlready;\n        const enoughCommaSentences = corpus.commaSentences.length >= MinCommaSentences;\n        const submitEnabled = nameOk && enoughCommaSentences;\n\n        return (\n            <div>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        value={this.name}\n                        onChange={(e) => this.name = e.target.value}\n                        />\n                    <Vis.Message show={nameExistsAlready}>Name already exists!</Vis.Message>\n                </div>\n                <div>\n                    <textarea\n                        placeholder=\"Enter your own text here\"\n                        onChange={(e) => this.onCorpusTextChange(e.target.value)}\n                        value={this.corpusText}\n                        >\n                    </textarea>\n                </div>\n                <div>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Characters: </td><td>{this.corpusText.length}</td>\n                            </tr>\n                            <tr>\n                                <td>Sentences: </td><td>{corpus.sentences.length}</td>\n                            </tr>\n                            <tr>\n                                <td>Sentences with comma: </td><td>{corpus.commaSentences.length}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <br />\n                    <Vis.Message show={!enoughCommaSentences}>The Corpus should have at least {MinCommaSentences} sentences with commas!</Vis.Message>\n                </div>\n                <div>\n                    <input\n                        type=\"button\"\n                        value=\"Submit Corpus\"\n                        disabled={!submitEnabled}\n                        onClick={() => {this.submitCorpus(this.corpus!)}}\n                        />\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/corpusPanel.tsx","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {observer} from 'mobx-react';\nimport {observable, when, computed} from 'mobx';\nimport {Settings} from './settings';\nimport {Corpus, CorpusData} from './corpus';\nimport {Editor, EditorState, ContentState} from 'draft-js';\nimport * as Vis from './visuals';\n\ntype ResultChunkType = \"stuff\" | \"correct\" | \"missing\" | \"wrong\"\ninterface ResultChunk {\n    content: string;\n    type: ResultChunkType\n}\n\nclass TestInstanceResult {\n    public constructor(\n        public readonly chunks: ResultChunk[],\n        public readonly missing: number,\n        public readonly wrong: number,\n        public readonly correct: number) {\n\n    }\n\n    public get isCorrect() {\n        return this.missing == 0 && this.wrong == 0;\n    }\n}\n\nfunction countCommas(str: string) {\n    return (str.match(/,+/g) || []).length\n}\n\nclass TestInstance {\n    public readonly refSentence: string;\n    public readonly testSentence: string;\n    public readonly context: string[];\n    @observable\n    private _result: TestInstanceResult | undefined;\n    public readonly commasNeeded: number;\n\n    constructor(public readonly corpus: Corpus, contextSize: number) {\n        [this.refSentence, this.context] = corpus.pickRandomCommaSentence(contextSize);\n        this.testSentence = this.refSentence.replace(/,/g, \"\");\n        this.commasNeeded = countCommas(this.refSentence)\n    }\n\n    @computed\n    public get result() {\n        return this._result;\n    }\n\n    private levenshteinMatrix(a: string, b: string) {\n        var matrix = [];\n\n        // increment along the first column of each row\n        var i;\n        for (i = 0; i <= b.length; i++) {\n            matrix[i] = [i];\n        }\n\n        // increment each column in the first row\n        var j;\n        for (j = 0; j <= a.length; j++) {\n            matrix[0][j] = j;\n        }\n\n        // Fill in the rest of the matrix\n        for (i = 1; i <= b.length; i++) {\n            for (j = 1; j <= a.length; j++) {\n                if (b.charAt(i - 1) == a.charAt(j - 1)) {\n                    matrix[i][j] = matrix[i - 1][j - 1];\n                } else {\n                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\n                        Math.min(matrix[i][j - 1] + 1, // insertion\n                            matrix[i - 1][j] + 1)); // deletion\n                }\n            }\n        }\n\n        return matrix;\n    };\n\n    public check(input: string) {\n        const ref = this.refSentence;\n        const m = this.levenshteinMatrix(input, ref);\n\n        let i = ref.length, j = input.length;\n        let missing = 0, wrong = 0;\n        let chunks: ResultChunk[] = []\n        const add = (c: string, type: ResultChunkType) => {\n            let prev = chunks[0]\n            if(prev && prev.type == type) {\n                prev.content = c + prev.content;\n            } else {\n                chunks.unshift({type, content: c})\n            }\n        }\n        while (i > 0 && j > 0) {\n            const cur = m[i][j];\n            const next = m[i][j] - 1;\n            if (i-1 >= 0 && m[i-1][j] == next) {\n                add(ref.charAt(i-1), \"missing\");\n                --i;\n                ++missing;\n            } else if (j-1 >= 0 && m[i][j-1] == next) {\n                add(input.charAt(j-1), \"wrong\");\n                --j;\n                ++wrong;\n            } else if (i-1 >= 0 && j-1 >= 0 && m[i-1][j-1] == cur) {\n                const c = ref.charAt(i-1)\n                add(c, c == \",\"? \"correct\" : \"stuff\");\n                --i; --j;\n            } else {\n                throw \"not possible!!!\"\n            }\n        }\n        this._result = new TestInstanceResult(chunks, missing, wrong, this.commasNeeded - missing);\n    }\n}\n\n@observer\nexport class MainPanel extends React.Component<{settings: Settings}> {\n\n    @observable\n    private testInst: TestInstance | undefined;\n\n    @observable\n    private editorState: EditorState;\n\n    constructor(props: {settings: Settings}) {\n        super(props);\n        \n        this.waitForNewCorpus();\n    }\n\n    private createNewTestInstance() {\n        const settings = this.props.settings;\n        this.testInst = new TestInstance(settings.currentCorpus!, settings.numContextSentences);\n        console.log(\"Created new instance:\");\n        console.log(this.testInst.context);\n        console.log(this.testInst.refSentence);\n        this.editorState = EditorState.createWithContent(ContentState.createFromText(this.testInst.testSentence));\n    }\n\n    private waitForNewCorpus() {\n        if (this.props.settings.currentCorpus === undefined) {\n            when(() => this.props.settings.currentCorpus !== undefined, this.createNewTestInstance.bind(this));\n            this.testInst = undefined;\n        } else {\n            this.createNewTestInstance();\n        }\n    }\n\n    private onEditFieldChange(newEditorState: EditorState) {\n\n        const test = this.testInst!\n        const text = newEditorState.getCurrentContent().getPlainText();\n        const oldText = this.editorState.getCurrentContent().getPlainText();\n        const hasContentChanged = text !== oldText;\n        console.log(\"change!\");\n        if (hasContentChanged) {\n            const ok = test.testSentence == text.replace(/,/g, \"\");\n\n            if(!ok) {\n                newEditorState = EditorState.undo(newEditorState);\n            }\n        }\n\n        this.editorState = newEditorState;\n    }\n\n    public render(): JSX.Element {\n        const settings = this.props.settings\n        const test = this.testInst;\n        if (!test) {\n            return (<Vis.Message>No corpus selected!</Vis.Message>)\n        }\n\n        const text = this.editorState.getCurrentContent().getPlainText();\n        const result = test.result;\n        console.log(\"result=\", result);\n        return (\n            <div>\n                <div className=\"context-container\">\n                    {test.context.map(s => s + \" \")}\n                </div>\n                <div className=\"editor-container\">\n                    {\n                        !result?\n                            <Editor editorState={this.editorState} onChange={this.onEditFieldChange.bind(this)}/>\n                            :\n                            result.chunks.map((c) => {switch(c.type) {\n                                case \"stuff\": return <span>{c.content}</span>\n                                case \"correct\": return <span style={{backgroundColor: \"greenyellow\"}}>{c.content}</span>\n                                case \"missing\": return <span style={{backgroundColor: \"yellow\"}}>{c.content}</span>\n                                case \"wrong\": return <span style={{backgroundColor: \"red\"}}>{c.content}</span>\n                            }})\n                    }\n                    \n                </div>\n                <div>\n                    <input\n                        type=\"button\"\n                        value=\"Check\"\n                        disabled={result !== undefined}\n                        onClick={() => test.check(text)}\n                        />\n                    <input\n                        type=\"button\"\n                        value=\"Next\"\n                        onClick={this.createNewTestInstance.bind(this)}\n                        />\n                </div>\n                <div className=\"info-container\">\n                    {\n                        settings.showCommasLeft? (\n                            <span>{countCommas(text)} / {test.commasNeeded} Commas </span>\n                        ) : undefined\n                    }\n                    {\n                        result? (\n                            <span>{result.wrong} Wrong, {result.missing} Missing, {result.correct} Correct</span>\n                        ) : undefined\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mainPanel.tsx"],"sourceRoot":""}